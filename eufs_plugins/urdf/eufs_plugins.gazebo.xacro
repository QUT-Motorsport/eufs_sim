<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:arg name="publish_tf" default="false"/>
  <xacro:arg name="simulate_perception" default="false"/>
  <xacro:arg name="command_mode" default="velocity"/>
  <xacro:arg name="pub_ground_truth" default="true"/>

  <!-- Custom plugin which controls the car using a given vehicle model.
   It controls the car by setting its velocity and position
   and the steering angle of the wheels -->
  <gazebo>
    <plugin name="race_car" filename="libgazebo_race_car_model.so">
      <update_rate>1000.0</update_rate>
      <publish_rate>200.0</publish_rate>
      <front_left_wheel_steering>left_steering_hinge_joint</front_left_wheel_steering>
      <front_right_wheel_steering>right_steering_hinge_joint</front_right_wheel_steering>
      <front_left_wheel>front_left_wheel_joint</front_left_wheel>
      <front_right_wheel>front_right_wheel_joint</front_right_wheel>
      <rear_left_wheel>rear_left_wheel_joint</rear_left_wheel>
      <rear_right_wheel>rear_right_wheel_joint</rear_right_wheel>
      <referenceFrame>map</referenceFrame>
      <robotFrame>base_footprint</robotFrame>
      <groundTruthCarStateTopic>/ground_truth/state</groundTruthCarStateTopic>
      <localisationCarStateTopic>/odometry_integration/car_state</localisationCarStateTopic>
      <wheelSpeedsTopicName>/ros_can/wheel_speeds</wheelSpeedsTopicName>
      <groundTruthWheelSpeedsTopicName>/ground_truth/wheel_speeds</groundTruthWheelSpeedsTopicName>
      <odometryTopicName>/ground_truth/odom</odometryTopicName>
      <controlDelay>0.035</controlDelay>
      <steeringLockTime>1.5</steeringLockTime>
      <pubGroundTruth>$(arg pub_ground_truth)</pubGroundTruth>
      <publishTransform>$(arg publish_tf)</publishTransform>
      <commandMode>$(arg command_mode)</commandMode>
      <yaml_config>$(arg config_file)</yaml_config>
      <noise_config>$(arg noise_config)</noise_config>
      <vehicle_model>$(arg vehicle_model)</vehicle_model>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gz_ground_truth_cones" filename="libgazebo_ground_truth_cones.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>30.0</updateRate>
      <cameraViewDistance>15</cameraViewDistance>
      <lidarViewDistance>100</lidarViewDistance>
      <lidarXViewDistance>15</lidarXViewDistance>
      <lidarYViewDistance>15</lidarYViewDistance>
      <lidarMinViewDistance>1</lidarMinViewDistance>
      <cameraFOV>1.91986</cameraFOV><!--110 degrees-->
      <cameraMinViewDistance>0.5</cameraMinViewDistance>
      <lidarFOV>3.141593</lidarFOV><!-- 180 degrees-->
      <lidarOn>true</lidarOn><!--If false, we only simulate camera measurements-->
      <trackFrame>map</trackFrame>
      <groundTruthConesTopicName>/ground_truth/cones</groundTruthConesTopicName>
      <groundTruthTrackTopicName>/ground_truth/track</groundTruthTrackTopicName>
      <perceptionConesTopicName>/simulated_noise/cones</perceptionConesTopicName>
      <perceptionTrackTopicName>/simulated_noise/track</perceptionTrackTopicName>
      <perceptionCameraDepthNoiseParameterA>0.01</perceptionCameraDepthNoiseParameterA>
      <perceptionCameraDepthNoiseParameterB>0.5</perceptionCameraDepthNoiseParameterB>
      <perceptionLidarNoise>0.03 0.03 0.0</perceptionLidarNoise>
      <pubGroundTruth>$(arg pub_ground_truth)</pubGroundTruth>
      <simulatePerception>$(arg simulate_perception)</simulatePerception>
      <recolor_config>$(arg recolor_config)</recolor_config>
    </plugin>
  </gazebo>

  <!-- <gazebo>
    <plugin name="gz_camera_0_cones" filename="libgazebo_camera_cones.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>15.0</updateRate>
      <cameraViewDistance>13</cameraViewDistance>
      <cameraFOV>2.09</cameraFOV>
      <cameraMinViewDistance>0.5</cameraMinViewDistance>
      <cameraTF>0.204 0.074 0.706 0 0 0.79</cameraTF>
      <recolorConfig>cone_recolor.yaml</recolorConfig>
      <cameraConesTopicName>/camera_0/cones</cameraConesTopicName>
      <perceptionCameraDepthNoiseParameterA>0.01</perceptionCameraDepthNoiseParameterA>
      <perceptionCameraDepthNoiseParameterB>0.5</perceptionCameraDepthNoiseParameterB>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gz_camera_1_cones" filename="libgazebo_camera_cones.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>15.0</updateRate>
      <cameraViewDistance>13</cameraViewDistance>
      <cameraFOV>2.09</cameraFOV>
      <cameraMinViewDistance>0.5</cameraMinViewDistance>
      <cameraTF>0.204 -0.074 0.706 0.0 0.0 -0.79</cameraTF>
      <recolorConfig>cone_recolor.yaml</recolorConfig>
      <cameraConesTopicName>/camera_1/cones</cameraConesTopicName>
      <perceptionCameraDepthNoiseParameterA>0.01</perceptionCameraDepthNoiseParameterA>
      <perceptionCameraDepthNoiseParameterB>0.5</perceptionCameraDepthNoiseParameterB>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gz_bounding_boxes" filename="libgazebo_simulate_bounding_boxes.so">
      <config_file>$(arg bounding_box_settings)</config_file>
      <publish_rate>50.0</publish_rate>
      <targetFrame>zed_right_camera_optical_frame</targetFrame>
      <sourceFrame>base_footprint</sourceFrame>
      <cameraWidth>1280</cameraWidth>
      <cameraHeight>720</cameraHeight>
      <gtBoundingBoxesTopic>ground_truth/bounding_boxes</gtBoundingBoxesTopic>
      <noisyBoundingBoxesTopic>noisy_bounding_boxes</noisyBoundingBoxesTopic>
      <customCameraInfo>custom_camera_info</customCameraInfo>
    </plugin>
  </gazebo> -->

</robot>
