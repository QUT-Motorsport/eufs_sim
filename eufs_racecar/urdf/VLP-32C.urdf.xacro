<?xml version="1.0"?>
<robot name="VLP-32C_LiDAR" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:macro name="VLP-32C_LiDAR" params="*origin parent prefix lidar_active scan_active hz:=10 lasers:=40 samples:=600 min_range:=0.2 max_range:=200.0 noise:=0.01 min_angle:=-1.5707963 max_angle:=1.5707963">

    <joint name="${prefix}_base_mount_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${prefix}_base_link"/>
    </joint>

    <link name="${prefix}_base_link">
      <inertial>
        <mass value="0.83"/>
        <origin xyz="0 0 0.03585"/>
        <inertia ixx="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" ixy="0" ixz="0"
          iyy="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" iyz="0"
          izz="${0.5 * 0.83 * (0.0516*0.0516)}"/>
      </inertial>
      <visual>
        <geometry>
          <mesh filename="file://$(find eufs_racecar)/meshes/VLP16_base_1.dae" />
        </geometry>
      </visual>
      <visual>
        <geometry>
          <mesh filename="file://$(find eufs_racecar)/meshes/VLP16_base_2.dae" />
        </geometry>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0.03585"/>
        <geometry>
          <cylinder radius="0.0516" length="0.0717"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}_base_scan_joint" type="fixed" >
      <origin xyz="0 0 0.0377" rpy="0 0 0" />
      <parent link="${prefix}_base_link" />
      <child link="${prefix}"/>
    </joint>

    <link name="${prefix}">
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
      </inertial>
      <visual>
        <origin xyz="0 0 -0.0377" />
        <geometry>
          <mesh filename="file://$(find eufs_racecar)/meshes/VLP16_scan.dae" />
        </geometry>
      </visual>
    </link>

    <gazebo reference="${prefix}">
      <!-- Enable simulated Velodyne LiDAR -->
      <xacro:if value="${lidar_active}">
        <sensor type="ray" name="${prefix}-vlp32">
          <always_on>true</always_on>
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1.0</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1.0</resolution>
                <min_angle>-${10.0*M_PI/180.0}</min_angle>
                <max_angle> ${15.0*M_PI/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${min_range}</min>
              <max>${max_range}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>${noise}</stddev>
            </noise>
          </ray>

          <plugin name="ros_lidar_plugin" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <remapping>~/out:=/velodyne_points</remapping>
            </ros>
            <frame_name>${prefix}</frame_name>
            <radiation_type>infrared</radiation_type>
            <output_type>sensor_msgs/PointCloud2</output_type>
          </plugin>
        </sensor>
      </xacro:if>

      <!-- Enable simulated laser scanner -->
      <xacro:if value="${scan_active}">
        <sensor type="ray" name="${prefix}-laserscan">
          <always_on>true</always_on>
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1.0</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>1</samples>
                <resolution>1.0</resolution>
                <min_angle>0.0</min_angle>
                <max_angle>0.0</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${min_range}</min>
              <max>${max_range}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>${noise}</stddev>
            </noise>
          </ray>

          <plugin name="ros_laserscan_plugin" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <remapping>~/out:=/scan</remapping>
            </ros>
            <frame_name>${prefix}</frame_name>
            <radiation_type>infrared</radiation_type>
            <output_type>sensor_msgs/LaserScan</output_type>
          </plugin>
        </sensor>
      </xacro:if>
    </gazebo>
  </xacro:macro>
</robot>
